version: "{build}"

environment:
  matrix:
  # For regular jobs, such as push, pr and etc.
  # - job_name: Linux
  #   appveyor_build_worker_image: ubuntu1804
  - job_name: MacOS
    appveyor_build_worker_image: macos
  # - job_name: Windows
  #   appveyor_build_worker_image: Visual Studio 2019
  # - job_name: LinuxDeploy
  #   appveyor_build_worker_image: ubuntu1804
for:
  - # Linux
    skip_tags: true
    matrix:
      only:
        - job_name: Linux
    install:
      - GO111MODULES=off; go mod vendor
      - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.42.0
    before_build:
      - make e2e-build
      - make e2e-run
      - make install-shellcheck
    build_script:
      - make TEST_OPTS="-tags ci -cover -timeout=20m -race" check
      - make e2e-test
    after_build:
      - make e2e-clean

  - # MacOS
    skip_tags: true
    matrix:
      only:
        - job_name: MacOS
    install:
      # - /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
      - brew install --cask docker
      - export PATH="/usr/local/bin:$PATH"
      # - GO111MODULES=off; go mod vendor
      # - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.42.0
    # before_build:
    #   - make e2e-build
    #   - make e2e-run
    #   - make install-shellcheck
    build_script:
      - docker --version
    # after_build:
    #   - make e2e-clean

  - # Windows
    skip_tags: true
    matrix:
      only:
        - job_name: Windows

    environment:
      matrix:
        - GOARCH: amd64

    install:
      - choco install make
      - go get github.com/golangci/golangci-lint/cmd/golangci-lint@v1.42.0
      - go mod vendor
    
    before_build:
      - make e2e-build
      - make e2e-run
      - make install-shellcheck
    build_script:
      - make TEST_OPTS="-tags ci -cover -timeout=20m -race" check
      - make e2e-test
    after_build:
      - make e2e-clean
  
  - # Linux Deploy (Develop)
    build: off
    matrix:
      only:
        - job_name: LinuxDeploy
    branches:
      only:
        - develop
        - master
    deploy:
      provider: Script
      on:
        branch: 
          - master
          - develop
    before_deploy:
      - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
    deploy_script:
      - echo "Complete!"
